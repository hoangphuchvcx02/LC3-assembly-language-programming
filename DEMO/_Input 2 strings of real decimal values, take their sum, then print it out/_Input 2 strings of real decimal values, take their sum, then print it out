;Input 2 strings of real decimal values, take their sum, then print it out.
; Use IO registers KBSR, KBDR, DSR, DDR 

.ORIG x3000
LD R2,NEG_DOT
LD R4,STORAGE_NUM1
LD R7,NEG_ASCII

POLL_KEYBOARD1 	LDI R1, KBSR
		BRzp POLL_KEYBOARD1 
		LDI R0, KBDR

POLL_SCREEN1	LD R3,NEG_ENTER
		LDI R1, DSR
		BRzp POLL_SCREEN1
		
		
		STI R0, DDR
		
		AND R5,R5,#0
		ADD R5,R5,R0
		ADD R5,R5,R3
		BRz NEXT_NUM
		ADD R3,R3,#-1
		NOT R3,R3
		ADD R5,R5,R3
		ADD R5,R5,R2
		BRnp STORE1
		LD R6, STORAGE_NUM1
		ST R6, DECIMAL_POINT1
STORE1		ADD R0,R0,R7
		STI R0, STORAGE_NUM1
		ADD R4,R4,#1
		ST R4, STORAGE_NUM1
		BR POLL_KEYBOARD1


NEXT_NUM 	LD R4,STORAGE_NUM2
POLL_KEYBOARD2 	LDI R1, KBSR
		BRzp POLL_KEYBOARD2 
		LDI R0, KBDR

POLL_SCREEN2	LD R3,NEG_ENTER
		LDI R1, DSR
		BRzp POLL_SCREEN2
		
		
		STI R0, DDR
		
		AND R5,R5,#0
		ADD R5,R5,R0
		ADD R5,R5,R3
		BRz SUM_INTEGER
		ADD R3,R3,#-1
		NOT R3,R3
		ADD R5,R5,R3
		ADD R5,R5,R2
		BRnp STORE2
		LD R6, STORAGE_NUM2
		ST R6, DECIMAL_POINT2
STORE2		ADD R0,R0,R7
		STI R0, STORAGE_NUM2
		ADD R4,R4,#1
		ST R4, STORAGE_NUM2
		BR POLL_KEYBOARD2

SUM_INTEGER	LD R5,DECIMAL_POINT1
		LD R6,DECIMAL_POINT2
		ST R5,TEMPORARY_ADDRESS1
		ST R6,TEMPORARY_ADDRESS2
		

		AND R1,R1,#0
LOOP_SI		ADD R1,R1,#-4
		BRz SUM_DECIMAL
		ADD R1,R1,#4
		LD R5,TEMPORARY_ADDRESS1
		LD R6,TEMPORARY_ADDRESS2
		ADD R5,R5,#-1
		ADD R6,R6,#-1
		ADD R1,R1,#1
		ST R5,TEMPORARY_ADDRESS1
		ST R6,TEMPORARY_ADDRESS2
		

		LDI R5,TEMPORARY_ADDRESS1
		LDI R6,TEMPORARY_ADDRESS2
		ADD R4,R5,R6
		
		ADD R4,R4,#-10
		BRn LESS_THAN_10
		LD R2,TEMPORARY_ADDRESS2
		ADD R2,R2,#-1
		LDR R3,R2,#0
		ADD R3,R3,#1
		STR R3,R2,#0
		BR GREATER_THAN_10

LESS_THAN_10		ADD R4,R4,#10
			STI R4,STORAGE_RESULT_INTEGER
			LD R7,STORAGE_RESULT_INTEGER
			ADD R7,R7,#-1
			ST R7,STORAGE_RESULT_INTEGER
			BR LOOP_SI	

GREATER_THAN_10		ADD R1,R1,#-4
			BRz LAST_RUN
			ADD R1,R1,#4
			STI R4,STORAGE_RESULT_INTEGER
			LD R7,STORAGE_RESULT_INTEGER
			ADD R7,R7,#-1
			ST R7,STORAGE_RESULT_INTEGER
			BR LOOP_SI

LAST_RUN		STI R4,STORAGE_RESULT_INTEGER
			LD R7,STORAGE_RESULT_INTEGER
			ADD R7,R7,#-1
			ST R7,STORAGE_RESULT_INTEGER
			AND R7,R7,#0
			ADD R7,R7,#1
			STI R7,STORAGE_RESULT_INTEGER

SUM_DECIMAL	LD R5,DECIMAL_POINT1
		LD R6,DECIMAL_POINT2
		ADD R5,R5,#5
		ADD R6,R6,#5
		ST R5,TEMPORARY_ADDRESS1
		ST R6,TEMPORARY_ADDRESS2
		

		AND R1,R1,#0
LOOP_SD		ADD R1,R1,#-4
		BRz CHECK
		ADD R1,R1,#4
		LD R5,TEMPORARY_ADDRESS1
		LD R6,TEMPORARY_ADDRESS2
		ADD R5,R5,#-1
		ADD R6,R6,#-1
		ADD R1,R1,#1
		ST R5,TEMPORARY_ADDRESS1
		ST R6,TEMPORARY_ADDRESS2
		

		LDI R5,TEMPORARY_ADDRESS1
		LDI R6,TEMPORARY_ADDRESS2
		ADD R4,R5,R6
		
		ADD R4,R4,#-10
		BRn LESS_THAN_10_D
		LD R2,TEMPORARY_ADDRESS2
		ADD R2,R2,#-1
		LDR R3,R2,#0
		ADD R3,R3,#1
		STR R3,R2,#0
		BR GREATER_THAN_10_D

LESS_THAN_10_D		ADD R4,R4,#10
			STI R4,STORAGE_RESULT_DECIMAL
			LD R7,STORAGE_RESULT_DECIMAL
			ADD R7,R7,#-1
			ST R7,STORAGE_RESULT_DECIMAL
			BR LOOP_SD	

GREATER_THAN_10_D	ADD R1,R1,#-4
			BRz LAST_RUN_D
			ADD R1,R1,#4
			STI R4,STORAGE_RESULT_DECIMAL
			LD R7,STORAGE_RESULT_DECIMAL
			ADD R7,R7,#-1
			ST R7,STORAGE_RESULT_DECIMAL
			BR LOOP_SD

LAST_RUN_D		STI R4,STORAGE_RESULT_DECIMAL
			LD R7,STORAGE_RESULT_DECIMAL
			ADD R7,R7,#-1
			ST R7,STORAGE_RESULT_DECIMAL
			AND R7,R7,#0
			ADD R7,R7,#1
			STI R7,STORAGE_RESULT_DECIMAL	

CHECK 			LDI R2,PLUS1_OR_NOT
			BRp PLUS1
			BR PRINT_INTEGER


PLUS1			LDI R3,DIGIT_INTEGER
			ADD R3,R3,#1
			ADD R3,R3,#-10
			BRn DONE
			STI R3,DIGIT_INTEGER
			LD R4,DIGIT_INTEGER
			ADD R4,R4,#-1
			ST R4,DIGIT_INTEGER
			BR PLUS1

DONE 			ADD R3,R3,#10
			STI R3,DIGIT_INTEGER
			BR PRINT_INTEGER

PRINT_INTEGER		LD R2,DATA_INTEGER_START
			LD R3,DATA_INTEGER_END
			NOT R3,R3
			ADD R3,R3,#1
LOOP_PI			ADD R4,R2,R3
			BRp PRINT_DOT
			LDI R0,DATA_INTEGER_START
POLL_SCREEN_INTEGER 	LDI R1, DSR
			BRzp POLL_SCREEN_INTEGER
			LD R5,ASCII
			ADD R0,R0,R5
			STI R0, DDR
			ADD R2,R2,#1
			ST R2,DATA_INTEGER_START
			BR LOOP_PI

PRINT_DOT		LDI R1, DSR
			BRzp PRINT_DOT
			LD R5,ASCII
			AND R0,R0,#0
			ADD R0,R0,R5
			ADD R0,R0,#-2
			STI R0, DDR
			BR PRINT_DECIMAL

PRINT_DECIMAL		LD R2,DATA_DECIMAL_START
			LD R3,DATA_DECIMAL_END
			NOT R3,R3
			ADD R3,R3,#1
LOOP_PD			ADD R4,R2,R3
			BRp FINISH
			LDI R0,DATA_DECIMAL_START
POLL_SCREEN_DECIMAL 	LDI R1, DSR
			BRzp POLL_SCREEN_DECIMAL
			LD R5,ASCII
			ADD R0,R0,R5
			STI R0, DDR
			ADD R2,R2,#1
			ST R2,DATA_DECIMAL_START
			BR LOOP_PD
FINISH			HALT		
NEG_DOT .FILL #-46
NEG_ENTER .FILL #-10
NEG_ASCII .FILL #-48
ASCII .FILL #48
KBSR .FILL xFE00
KBDR .FILL xFE02
DSR .FILL xFE04
DDR .FILL xFE06
STORAGE_NUM1 .FILL x3100
STORAGE_NUM2 .FILL x3150
DECIMAL_POINT1 .BLKW 1
DECIMAL_POINT2 .BLKW 1
TEMPORARY_ADDRESS1 .BLKW 1
TEMPORARY_ADDRESS2 .BLKW 1
STORAGE_RESULT_INTEGER .FILL x3200
STORAGE_RESULT_DECIMAL .FILL x3250
PLUS1_OR_NOT .FILL x324C
DIGIT_INTEGER .FILL x3200
DATA_INTEGER_START .FILL x31FC
DATA_INTEGER_END .FILL x3200
DATA_DECIMAL_START .FILL x324D
DATA_DECIMAL_END .FILL x3250


.END
