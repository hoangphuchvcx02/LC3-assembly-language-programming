(0000) 3000  0011000000000000 (   4)                 .ORIG x3000
(3000) 24C7  0010010011000111 (   5)                 LD    R2 NEG_DOT
(3001) 28CE  0010100011001110 (   6)                 LD    R4 STORAGE_NUM1
(3002) 2EC7  0010111011000111 (   7)                 LD    R7 NEG_ASCII
(3003) A2C8  1010001011001000 (   9) POLL_KEYBOARD1  LDI   R1 KBSR
(3004) 07FE  0000011111111110 (  10)                 BRZP  POLL_KEYBOARD1
(3005) A0C7  1010000011000111 (  11)                 LDI   R0 KBDR
(3006) 26C2  0010011011000010 (  13) POLL_SCREEN1    LD    R3 NEG_ENTER
(3007) A2C6  1010001011000110 (  14)                 LDI   R1 DSR
(3008) 07FD  0000011111111101 (  15)                 BRZP  POLL_SCREEN1
(3009) B0C5  1011000011000101 (  18)                 STI   R0 DDR
(300A) 5B60  0101101101100000 (  20)                 AND   R5 R5 #0
(300B) 1B40  0001101101000000 (  21)                 ADD   R5 R5 R0
(300C) 1B43  0001101101000011 (  22)                 ADD   R5 R5 R3
(300D) 040C  0000010000001100 (  23)                 BRZ   NEXT_NUM
(300E) 16FF  0001011011111111 (  24)                 ADD   R3 R3 #-1
(300F) 96FF  1001011011111111 (  25)                 NOT   R3 R3
(3010) 1B43  0001101101000011 (  26)                 ADD   R5 R5 R3
(3011) 1B42  0001101101000010 (  27)                 ADD   R5 R5 R2
(3012) 0A02  0000101000000010 (  28)                 BRNP  STORE1
(3013) 2CBC  0010110010111100 (  29)                 LD    R6 STORAGE_NUM1
(3014) 3CBD  0011110010111101 (  30)                 ST    R6 DECIMAL_POINT1
(3015) 1007  0001000000000111 (  31) STORE1          ADD   R0 R0 R7
(3016) B0B9  1011000010111001 (  32)                 STI   R0 STORAGE_NUM1
(3017) 1921  0001100100100001 (  33)                 ADD   R4 R4 #1
(3018) 38B7  0011100010110111 (  34)                 ST    R4 STORAGE_NUM1
(3019) 0FE9  0000111111101001 (  35)                 BRNZP POLL_KEYBOARD1
(301A) 28B6  0010100010110110 (  38) NEXT_NUM        LD    R4 STORAGE_NUM2
(301B) A2B0  1010001010110000 (  39) POLL_KEYBOARD2  LDI   R1 KBSR
(301C) 07FE  0000011111111110 (  40)                 BRZP  POLL_KEYBOARD2
(301D) A0AF  1010000010101111 (  41)                 LDI   R0 KBDR
(301E) 26AA  0010011010101010 (  43) POLL_SCREEN2    LD    R3 NEG_ENTER
(301F) A2AE  1010001010101110 (  44)                 LDI   R1 DSR
(3020) 07FD  0000011111111101 (  45)                 BRZP  POLL_SCREEN2
(3021) B0AD  1011000010101101 (  48)                 STI   R0 DDR
(3022) 5B60  0101101101100000 (  50)                 AND   R5 R5 #0
(3023) 1B40  0001101101000000 (  51)                 ADD   R5 R5 R0
(3024) 1B43  0001101101000011 (  52)                 ADD   R5 R5 R3
(3025) 040C  0000010000001100 (  53)                 BRZ   SUM_INTEGER
(3026) 16FF  0001011011111111 (  54)                 ADD   R3 R3 #-1
(3027) 96FF  1001011011111111 (  55)                 NOT   R3 R3
(3028) 1B43  0001101101000011 (  56)                 ADD   R5 R5 R3
(3029) 1B42  0001101101000010 (  57)                 ADD   R5 R5 R2
(302A) 0A02  0000101000000010 (  58)                 BRNP  STORE2
(302B) 2CA5  0010110010100101 (  59)                 LD    R6 STORAGE_NUM2
(302C) 3CA6  0011110010100110 (  60)                 ST    R6 DECIMAL_POINT2
(302D) 1007  0001000000000111 (  61) STORE2          ADD   R0 R0 R7
(302E) B0A2  1011000010100010 (  62)                 STI   R0 STORAGE_NUM2
(302F) 1921  0001100100100001 (  63)                 ADD   R4 R4 #1
(3030) 38A0  0011100010100000 (  64)                 ST    R4 STORAGE_NUM2
(3031) 0FE9  0000111111101001 (  65)                 BRNZP POLL_KEYBOARD2
(3032) 2A9F  0010101010011111 (  67) SUM_INTEGER     LD    R5 DECIMAL_POINT1
(3033) 2C9F  0010110010011111 (  68)                 LD    R6 DECIMAL_POINT2
(3034) 3A9F  0011101010011111 (  69)                 ST    R5 TEMPORARY_ADDRESS1
(3035) 3C9F  0011110010011111 (  70)                 ST    R6 TEMPORARY_ADDRESS2
(3036) 5260  0101001001100000 (  73)                 AND   R1 R1 #0
(3037) 127C  0001001001111100 (  74) LOOP_SI         ADD   R1 R1 #-4
(3038) 0428  0000010000101000 (  75)                 BRZ   SUM_DECIMAL
(3039) 1264  0001001001100100 (  76)                 ADD   R1 R1 #4
(303A) 2A99  0010101010011001 (  77)                 LD    R5 TEMPORARY_ADDRESS1
(303B) 2C99  0010110010011001 (  78)                 LD    R6 TEMPORARY_ADDRESS2
(303C) 1B7F  0001101101111111 (  79)                 ADD   R5 R5 #-1
(303D) 1DBF  0001110110111111 (  80)                 ADD   R6 R6 #-1
(303E) 1261  0001001001100001 (  81)                 ADD   R1 R1 #1
(303F) 3A94  0011101010010100 (  82)                 ST    R5 TEMPORARY_ADDRESS1
(3040) 3C94  0011110010010100 (  83)                 ST    R6 TEMPORARY_ADDRESS2
(3041) AA92  1010101010010010 (  86)                 LDI   R5 TEMPORARY_ADDRESS1
(3042) AC92  1010110010010010 (  87)                 LDI   R6 TEMPORARY_ADDRESS2
(3043) 1946  0001100101000110 (  88)                 ADD   R4 R5 R6
(3044) 1936  0001100100110110 (  90)                 ADD   R4 R4 #-10
(3045) 0806  0000100000000110 (  91)                 BRN   LESS_THAN_10
(3046) 248E  0010010010001110 (  92)                 LD    R2 TEMPORARY_ADDRESS2
(3047) 14BF  0001010010111111 (  93)                 ADD   R2 R2 #-1
(3048) 6680  0110011010000000 (  94)                 LDR   R3 R2 #0
(3049) 16E1  0001011011100001 (  95)                 ADD   R3 R3 #1
(304A) 7680  0111011010000000 (  96)                 STR   R3 R2 #0
(304B) 0E06  0000111000000110 (  97)                 BRNZP GREATER_THAN_10
(304C) 192A  0001100100101010 (  99) LESS_THAN_10    ADD   R4 R4 #10
(304D) B888  1011100010001000 ( 100)                 STI   R4 STORAGE_RESULT_INTEGER
(304E) 2E87  0010111010000111 ( 101)                 LD    R7 STORAGE_RESULT_INTEGER
(304F) 1FFF  0001111111111111 ( 102)                 ADD   R7 R7 #-1
(3050) 3E85  0011111010000101 ( 103)                 ST    R7 STORAGE_RESULT_INTEGER
(3051) 0FE5  0000111111100101 ( 104)                 BRNZP LOOP_SI
(3052) 127C  0001001001111100 ( 106) GREATER_THAN_10 ADD   R1 R1 #-4
(3053) 0406  0000010000000110 ( 107)                 BRZ   LAST_RUN
(3054) 1264  0001001001100100 ( 108)                 ADD   R1 R1 #4
(3055) B880  1011100010000000 ( 109)                 STI   R4 STORAGE_RESULT_INTEGER
(3056) 2E7F  0010111001111111 ( 110)                 LD    R7 STORAGE_RESULT_INTEGER
(3057) 1FFF  0001111111111111 ( 111)                 ADD   R7 R7 #-1
(3058) 3E7D  0011111001111101 ( 112)                 ST    R7 STORAGE_RESULT_INTEGER
(3059) 0FDD  0000111111011101 ( 113)                 BRNZP LOOP_SI
(305A) B87B  1011100001111011 ( 115) LAST_RUN        STI   R4 STORAGE_RESULT_INTEGER
(305B) 2E7A  0010111001111010 ( 116)                 LD    R7 STORAGE_RESULT_INTEGER
(305C) 1FFF  0001111111111111 ( 117)                 ADD   R7 R7 #-1
(305D) 3E78  0011111001111000 ( 118)                 ST    R7 STORAGE_RESULT_INTEGER
(305E) 5FE0  0101111111100000 ( 119)                 AND   R7 R7 #0
(305F) 1FE1  0001111111100001 ( 120)                 ADD   R7 R7 #1
(3060) BE75  1011111001110101 ( 121)                 STI   R7 STORAGE_RESULT_INTEGER
(3061) 2A70  0010101001110000 ( 123) SUM_DECIMAL     LD    R5 DECIMAL_POINT1
(3062) 2C70  0010110001110000 ( 124)                 LD    R6 DECIMAL_POINT2
(3063) 1B65  0001101101100101 ( 125)                 ADD   R5 R5 #5
(3064) 1DA5  0001110110100101 ( 126)                 ADD   R6 R6 #5
(3065) 3A6E  0011101001101110 ( 127)                 ST    R5 TEMPORARY_ADDRESS1
(3066) 3C6E  0011110001101110 ( 128)                 ST    R6 TEMPORARY_ADDRESS2
(3067) 5260  0101001001100000 ( 131)                 AND   R1 R1 #0
(3068) 127C  0001001001111100 ( 132) LOOP_SD         ADD   R1 R1 #-4
(3069) 0428  0000010000101000 ( 133)                 BRZ   CHECK
(306A) 1264  0001001001100100 ( 134)                 ADD   R1 R1 #4
(306B) 2A68  0010101001101000 ( 135)                 LD    R5 TEMPORARY_ADDRESS1
(306C) 2C68  0010110001101000 ( 136)                 LD    R6 TEMPORARY_ADDRESS2
(306D) 1B7F  0001101101111111 ( 137)                 ADD   R5 R5 #-1
(306E) 1DBF  0001110110111111 ( 138)                 ADD   R6 R6 #-1
(306F) 1261  0001001001100001 ( 139)                 ADD   R1 R1 #1
(3070) 3A63  0011101001100011 ( 140)                 ST    R5 TEMPORARY_ADDRESS1
(3071) 3C63  0011110001100011 ( 141)                 ST    R6 TEMPORARY_ADDRESS2
(3072) AA61  1010101001100001 ( 144)                 LDI   R5 TEMPORARY_ADDRESS1
(3073) AC61  1010110001100001 ( 145)                 LDI   R6 TEMPORARY_ADDRESS2
(3074) 1946  0001100101000110 ( 146)                 ADD   R4 R5 R6
(3075) 1936  0001100100110110 ( 148)                 ADD   R4 R4 #-10
(3076) 0806  0000100000000110 ( 149)                 BRN   LESS_THAN_10_D
(3077) 245D  0010010001011101 ( 150)                 LD    R2 TEMPORARY_ADDRESS2
(3078) 14BF  0001010010111111 ( 151)                 ADD   R2 R2 #-1
(3079) 6680  0110011010000000 ( 152)                 LDR   R3 R2 #0
(307A) 16E1  0001011011100001 ( 153)                 ADD   R3 R3 #1
(307B) 7680  0111011010000000 ( 154)                 STR   R3 R2 #0
(307C) 0E06  0000111000000110 ( 155)                 BRNZP GREATER_THAN_10_D
(307D) 192A  0001100100101010 ( 157) LESS_THAN_10_D  ADD   R4 R4 #10
(307E) B858  1011100001011000 ( 158)                 STI   R4 STORAGE_RESULT_DECIMAL
(307F) 2E57  0010111001010111 ( 159)                 LD    R7 STORAGE_RESULT_DECIMAL
(3080) 1FFF  0001111111111111 ( 160)                 ADD   R7 R7 #-1
(3081) 3E55  0011111001010101 ( 161)                 ST    R7 STORAGE_RESULT_DECIMAL
(3082) 0FE5  0000111111100101 ( 162)                 BRNZP LOOP_SD
(3083) 127C  0001001001111100 ( 164) GREATER_THAN_10_D ADD   R1 R1 #-4
(3084) 0406  0000010000000110 ( 165)                 BRZ   LAST_RUN_D
(3085) 1264  0001001001100100 ( 166)                 ADD   R1 R1 #4
(3086) B850  1011100001010000 ( 167)                 STI   R4 STORAGE_RESULT_DECIMAL
(3087) 2E4F  0010111001001111 ( 168)                 LD    R7 STORAGE_RESULT_DECIMAL
(3088) 1FFF  0001111111111111 ( 169)                 ADD   R7 R7 #-1
(3089) 3E4D  0011111001001101 ( 170)                 ST    R7 STORAGE_RESULT_DECIMAL
(308A) 0FDD  0000111111011101 ( 171)                 BRNZP LOOP_SD
(308B) B84B  1011100001001011 ( 173) LAST_RUN_D      STI   R4 STORAGE_RESULT_DECIMAL
(308C) 2E4A  0010111001001010 ( 174)                 LD    R7 STORAGE_RESULT_DECIMAL
(308D) 1FFF  0001111111111111 ( 175)                 ADD   R7 R7 #-1
(308E) 3E48  0011111001001000 ( 176)                 ST    R7 STORAGE_RESULT_DECIMAL
(308F) 5FE0  0101111111100000 ( 177)                 AND   R7 R7 #0
(3090) 1FE1  0001111111100001 ( 178)                 ADD   R7 R7 #1
(3091) BE45  1011111001000101 ( 179)                 STI   R7 STORAGE_RESULT_DECIMAL
(3092) A445  1010010001000101 ( 181) CHECK           LDI   R2 PLUS1_OR_NOT
(3093) 0201  0000001000000001 ( 182)                 BRP   PLUS1
(3094) 0E0C  0000111000001100 ( 183)                 BRNZP PRINT_INTEGER
(3095) A643  1010011001000011 ( 186) PLUS1           LDI   R3 DIGIT_INTEGER
(3096) 16E1  0001011011100001 ( 187)                 ADD   R3 R3 #1
(3097) 16F6  0001011011110110 ( 188)                 ADD   R3 R3 #-10
(3098) 0805  0000100000000101 ( 189)                 BRN   DONE
(3099) B63F  1011011000111111 ( 190)                 STI   R3 DIGIT_INTEGER
(309A) 283E  0010100000111110 ( 191)                 LD    R4 DIGIT_INTEGER
(309B) 193F  0001100100111111 ( 192)                 ADD   R4 R4 #-1
(309C) 383C  0011100000111100 ( 193)                 ST    R4 DIGIT_INTEGER
(309D) 0FF7  0000111111110111 ( 194)                 BRNZP PLUS1
(309E) 16EA  0001011011101010 ( 196) DONE            ADD   R3 R3 #10
(309F) B639  1011011000111001 ( 197)                 STI   R3 DIGIT_INTEGER
(30A0) 0E00  0000111000000000 ( 198)                 BRNZP PRINT_INTEGER
(30A1) 2438  0010010000111000 ( 200) PRINT_INTEGER   LD    R2 DATA_INTEGER_START
(30A2) 2638  0010011000111000 ( 201)                 LD    R3 DATA_INTEGER_END
(30A3) 96FF  1001011011111111 ( 202)                 NOT   R3 R3
(30A4) 16E1  0001011011100001 ( 203)                 ADD   R3 R3 #1
(30A5) 1883  0001100010000011 ( 204) LOOP_PI         ADD   R4 R2 R3
(30A6) 0209  0000001000001001 ( 205)                 BRP   PRINT_DOT
(30A7) A032  1010000000110010 ( 206)                 LDI   R0 DATA_INTEGER_START
(30A8) A225  1010001000100101 ( 207) POLL_SCREEN_INTEGER LDI   R1 DSR
(30A9) 07FE  0000011111111110 ( 208)                 BRZP  POLL_SCREEN_INTEGER
(30AA) 2A20  0010101000100000 ( 209)                 LD    R5 ASCII
(30AB) 1005  0001000000000101 ( 210)                 ADD   R0 R0 R5
(30AC) B022  1011000000100010 ( 211)                 STI   R0 DDR
(30AD) 14A1  0001010010100001 ( 212)                 ADD   R2 R2 #1
(30AE) 342B  0011010000101011 ( 213)                 ST    R2 DATA_INTEGER_START
(30AF) 0FF5  0000111111110101 ( 214)                 BRNZP LOOP_PI
(30B0) A21D  1010001000011101 ( 216) PRINT_DOT       LDI   R1 DSR
(30B1) 07FE  0000011111111110 ( 217)                 BRZP  PRINT_DOT
(30B2) 2A18  0010101000011000 ( 218)                 LD    R5 ASCII
(30B3) 5020  0101000000100000 ( 219)                 AND   R0 R0 #0
(30B4) 1005  0001000000000101 ( 220)                 ADD   R0 R0 R5
(30B5) 103E  0001000000111110 ( 221)                 ADD   R0 R0 #-2
(30B6) B018  1011000000011000 ( 222)                 STI   R0 DDR
(30B7) 0E00  0000111000000000 ( 223)                 BRNZP PRINT_DECIMAL
(30B8) 2423  0010010000100011 ( 225) PRINT_DECIMAL   LD    R2 DATA_DECIMAL_START
(30B9) 2623  0010011000100011 ( 226)                 LD    R3 DATA_DECIMAL_END
(30BA) 96FF  1001011011111111 ( 227)                 NOT   R3 R3
(30BB) 16E1  0001011011100001 ( 228)                 ADD   R3 R3 #1
(30BC) 1883  0001100010000011 ( 229) LOOP_PD         ADD   R4 R2 R3
(30BD) 0209  0000001000001001 ( 230)                 BRP   FINISH
(30BE) A01D  1010000000011101 ( 231)                 LDI   R0 DATA_DECIMAL_START
(30BF) A20E  1010001000001110 ( 232) POLL_SCREEN_DECIMAL LDI   R1 DSR
(30C0) 07FE  0000011111111110 ( 233)                 BRZP  POLL_SCREEN_DECIMAL
(30C1) 2A09  0010101000001001 ( 234)                 LD    R5 ASCII
(30C2) 1005  0001000000000101 ( 235)                 ADD   R0 R0 R5
(30C3) B00B  1011000000001011 ( 236)                 STI   R0 DDR
(30C4) 14A1  0001010010100001 ( 237)                 ADD   R2 R2 #1
(30C5) 3416  0011010000010110 ( 238)                 ST    R2 DATA_DECIMAL_START
(30C6) 0FF5  0000111111110101 ( 239)                 BRNZP LOOP_PD
(30C7) F025  1111000000100101 ( 240) FINISH          TRAP  x25
(30C8) FFD2  1111111111010010 ( 241) NEG_DOT         .FILL xFFD2
(30C9) FFF6  1111111111110110 ( 242) NEG_ENTER       .FILL xFFF6
(30CA) FFD0  1111111111010000 ( 243) NEG_ASCII       .FILL xFFD0
(30CB) 0030  0000000000110000 ( 244) ASCII           .FILL x0030
(30CC) FE00  1111111000000000 ( 245) KBSR            .FILL xFE00
(30CD) FE02  1111111000000010 ( 246) KBDR            .FILL xFE02
(30CE) FE04  1111111000000100 ( 247) DSR             .FILL xFE04
(30CF) FE06  1111111000000110 ( 248) DDR             .FILL xFE06
(30D0) 3100  0011000100000000 ( 249) STORAGE_NUM1    .FILL x3100
(30D1) 3150  0011000101010000 ( 250) STORAGE_NUM2    .FILL x3150
(30D2) 0000  0000000000000000 ( 252) DECIMAL_POINT1  .FILL x0000
(30D3) 0000  0000000000000000 ( 253) DECIMAL_POINT2  .FILL x0000
(30D4) 0000  0000000000000000 ( 254) TEMPORARY_ADDRESS1 .FILL x0000
(30D5) 0000  0000000000000000 ( 255) TEMPORARY_ADDRESS2 .FILL x0000
(30D6) 3200  0011001000000000 ( 255) STORAGE_RESULT_INTEGER .FILL x3200
(30D7) 3250  0011001001010000 ( 256) STORAGE_RESULT_DECIMAL .FILL x3250
(30D8) 324C  0011001001001100 ( 257) PLUS1_OR_NOT    .FILL x324C
(30D9) 3200  0011001000000000 ( 258) DIGIT_INTEGER   .FILL x3200
(30DA) 31FC  0011000111111100 ( 259) DATA_INTEGER_START .FILL x31FC
(30DB) 3200  0011001000000000 ( 260) DATA_INTEGER_END .FILL x3200
(30DC) 324D  0011001001001101 ( 261) DATA_DECIMAL_START .FILL x324D
(30DD) 3250  0011001001010000 ( 262) DATA_DECIMAL_END .FILL x3250
